#Load the dataset
from sklearn.datasets import load_iris
iris = load_iris()
X = iris.data
y = iris.target
import matplotlib.pyplot as plt
print(iris.feature_names)

#split the dataset
from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.5, stratify=y, random_state=42)

#Build the model
import tensorflow as tf 
from tensorflow import keras 
encoder = keras.models.Sequential([keras.layers.Dense(2, input_shape=[4], activation='linear')])
decoder = keras.models.Sequential([keras.layers.Dense(4, input_shape=[2], activation='linear')])
autoencoder = keras.models.Sequential([encoder, decoder]) 
autoencoder.summary()

#Compiling the model
autoencoder.compile(loss="mse", optimizer='adam')

#Fit the data into model
history_ae = autoencoder.fit(X_train, X_train, epochs=400)
output_ae = encoder.predict(X_test) 
print(output_ae.shape)
plt.scatter(output_ae[:,0], output_ae[:,1])
plt.show()