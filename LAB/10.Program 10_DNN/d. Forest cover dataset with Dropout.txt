# Load Data set
from sklearn.datasets import fetch_covtype
import matplotlib.pyplot as plt
from tensorflow import keras

#Load data
X,y=fetch_covtype(return_X_y=True)

#Cross validation
from sklearn.model_selection import train_test_split
X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.2,random_state=42)


#Defining the model- Input and Hidden Layer Construction
model_DNN =keras.models.Sequential()
model_DNN.add(keras.layers.Dense(units=12, activation= 'relu',input_shape=X_train.shape[1:]))
model_DNN.add(keras.layers.Dense(units=10, activation='relu' ))
model_DNN.add(keras.layers.Dense(units=8, activation='relu' ))
model_DNN.add(keras.layers.Dropout(0.25))
model_DNN.add(keras.layers.Dense(units=6, activation='relu'))
model_DNN.add(keras.layers.Dense(units=54, activation='sigmoid' ))
model_DNN.summary()
#Compile and fit
model_DNN.compile(loss='sparse_categorical_crossentropy', optimizer='adam', metrics=['accuracy'])
model_DNN.fit(X_train,y_train,validation_split=0.1,epochs=5,batch_size=16)
testloss,testaccuracy=model_DNN.evaluate(X_test,y_test)
print ('The test loss is',testloss)
print('The test accuracy is',testaccuracy)